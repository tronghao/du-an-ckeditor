<?xml version="1.0" encoding="UTF-8"?>
<modification>
  <id>VQMOD CORE</id>
  <version>1.4.x and 1.5.x</version>
  <vqmver required="true">2.4.0</vqmver>
  <author>vqmod.com</author>
  
  <file name="catalog/controller/account/register.php">
    <operation error="skip">
      <search position="before"><![CDATA[
       $data['column_left'] = $this->load->controller('common/column_left');
        ]]></search>
      <add><![CDATA[
          if (isset($this->request->post['info-customer'])) {
            $data['infoCustomer'] = $this->request->post['info-customer'];
          } else {
            $data['infoCustomer'] = "";
          }
        ]]></add>
    </operation>
  </file>

  <file name="catalog/view/theme/default/template/account/register.tpl">
    <operation error="skip">
      <search position="before"><![CDATA[
        <?php if ($text_agree) { ?>
        ]]></search>
      <add><![CDATA[
          <fieldset>
            <legend>Introduce yourself</legend>
            <textarea class="form-control" rows="5" id="info" name="info-customer"><?php echo $infoCustomer; ?></textarea>
          </fieldset>
          <script src="https://cdn.ckeditor.com/ckeditor5/23.1.0/classic/ckeditor.js"></script>
          <script>
              function MyCustomUploadAdapterPlugin( editor ) {
                  editor.plugins.get( 'FileRepository' ).createUploadAdapter = ( loader ) => {
                      return new MyUploadAdapter( loader );
                  };
              }
              ClassicEditor
                  .create( document.querySelector( '#info' ),{
                    extraPlugins: [ MyCustomUploadAdapterPlugin ],
                  } )
                  .catch( error => {
                      console.error( error );
                  } );
          </script>

          <style>
            .ck-editor__editable_inline {
                min-height: 300px;
                max-height: 300px;
            }
          </style>

          <script>
          //javascript

          class MyUploadAdapter {
              constructor( loader ) {
                  // CKEditor 5's FileLoader instance.
                  this.loader = loader;
                  // URL where to send files.
                  this.url = '<?php echo HTTP_SERVER."index.php?route=account/uploadimage"; ?>';
              }

              // Starts the upload process.
              upload() {
                  return new Promise( ( resolve, reject ) => {
                      this._initRequest();
                      this._initListeners( resolve, reject );
                      this._sendRequest();
                  } );
              }

              // Aborts the upload process.
              abort() {
                  if ( this.xhr ) {
                      this.xhr.abort();
                  }
              }

              // Example implementation using XMLHttpRequest.
              _initRequest() {
                  const xhr = this.xhr = new XMLHttpRequest();

                  xhr.open( 'POST', this.url, true );
                  xhr.responseType = 'json';
              }

              // Initializes XMLHttpRequest listeners.
              _initListeners( resolve, reject ) {
                  const xhr = this.xhr;
                  const loader = this.loader;
                  const genericErrorText = 'Couldn\'t upload file:' + ` ${ loader.file.name }.`;

                  xhr.addEventListener( 'error', () => reject( genericErrorText ) );
                  xhr.addEventListener( 'abort', () => reject() );
                  xhr.addEventListener( 'load', () => {
                      const response = xhr.response;

                      if ( !response || response.error ) {
                          return reject( response && response.error ? response.error.message : genericErrorText );
                      }

                      // If the upload is successful, resolve the upload promise with an object containing
                      // at least the "default" URL, pointing to the image on the server.
                      resolve( {
                          default: response.url
                      } );
                  } );

                  if ( xhr.upload ) {
                      xhr.upload.addEventListener( 'progress', evt => {
                          if ( evt.lengthComputable ) {
                              loader.uploadTotal = evt.total;
                              loader.uploaded = evt.loaded;
                          }
                      } );
                  }
              }

              // Prepares the data and sends the request.
              _sendRequest() {
                  const data = new FormData();

                  data.append( 'upload', this.loader.file );

                  this.xhr.send( data );
              }
          }
        </script>
        ]]></add>
    </operation>
  </file>

  <file name="catalog/model/account/customer.php">
    <operation error="skip">
      <search position="replace"><![CDATA[
        $this->db->query("INSERT INTO " . DB_PREFIX . "customer SET customer_group_id = '" . (int)$customer_group_id . "', store_id = '" . (int)$this->config->get('config_store_id') . "', firstname = '" . $this->db->escape($data['firstname']) . "', lastname = '" . $this->db->escape($data['lastname']) . "', email = '" . $this->db->escape($data['email']) . "', telephone = '" . $this->db->escape($data['telephone']) . "', fax = '" . $this->db->escape($data['fax']) . "', custom_field = '" . $this->db->escape(isset($data['custom_field']['account']) ? serialize($data['custom_field']['account']) : '') . "', salt = '" . $this->db->escape($salt = substr(md5(uniqid(rand(), true)), 0, 9)) . "', password = '" . $this->db->escape(sha1($salt . sha1($salt . sha1($data['password'])))) . "', newsletter = '" . (isset($data['newsletter']) ? (int)$data['newsletter'] : 0) . "', ip = '" . $this->db->escape($this->request->server['REMOTE_ADDR']) . "', status = '1', approved = '" . (int)!$customer_group_info['approval'] . "', date_added = NOW()");
        ]]></search>
      <add><![CDATA[
           $this->db->query("INSERT INTO " . DB_PREFIX . "customer SET customer_group_id = '" . (int)$customer_group_id . "', store_id = '" . (int)$this->config->get('config_store_id') . "', firstname = '" . $this->db->escape($data['firstname']) . "', lastname = '" . $this->db->escape($data['lastname']) . "', email = '" . $this->db->escape($data['email']) . "', telephone = '" . $this->db->escape($data['telephone']) . "', fax = '" . $this->db->escape($data['fax']) . "', custom_field = '" . $this->db->escape(isset($data['custom_field']['account']) ? serialize($data['custom_field']['account']) : '') . "', salt = '" . $this->db->escape($salt = substr(md5(uniqid(rand(), true)), 0, 9)) . "', password = '" . $this->db->escape(sha1($salt . sha1($salt . sha1($data['password'])))) . "', newsletter = '" . (isset($data['newsletter']) ? (int)$data['newsletter'] : 0) . "', ip = '" . $this->db->escape($this->request->server['REMOTE_ADDR']) . "', status = '1', approved = '" . (int)!$customer_group_info['approval'] . "', date_added = NOW(), info_customer='".$this->db->escape($data['info-customer'])."'");
        ]]></add>
    </operation>

  </file>
</modification>